// Copyright (c) Microsoft Corporation.  All rights reserved.

#include "lampArray.h"

#pragma once

enum LampPurposeKind
{
    LampPurposeControl = 1,
    LampPurposeAccent = 2,
    LampPurposeBranding = 4,
    LampPurposeStatus = 8,
    LampPurposeIllumination = 16,
    LampPurposePresentation = 32,
};

enum LampArrayKind
{
    LampArrayKindKeyboard = 1,
    LampArrayKindMouse = 2,
    LampArrayKindGameController = 3,
    LampArrayKindPeripheral = 4,
    LampArrayKindScene = 5,
    LampArrayKindNotification = 6,
    LampArrayKindChassis = 7,
    LampArrayKindWearable = 8,
    LampArrayKindFurniture = 9,
    LampArrayKindArt = 10,
};

static const LampAttributesResponseReport s_lampAttributesReports[]  = {
    // All lengths in micrometers.
    // All positions in millimeters from upper-left corner of device.
    // All times in milliseconds.
    // Id  X     Y     Z     Latency                        Purposes           RED   GRN   BLUE  GAIN  PROGAMMBLE?           KEY
    {0, 0, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0  },
    {1, 1, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0  },
    {2, 2, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0  },
    {3, 3, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0  },
    {4, 4, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0  },
    {5, 5, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0  },
    {6, 6, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0  },
    {7, 7, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0  },
    {8, 8, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0  },
    {9, 9, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0  },
    {10, 10, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {11, 11, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {12, 12, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {13, 13, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {14, 14, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {15, 15, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {16, 16, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {17, 17, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {18, 18, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {19, 19, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {20, 20, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {21, 21, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {22, 22, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {23, 23, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {24, 24, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {25, 25, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {26, 26, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {27, 27, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {28, 28, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {29, 29, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {30, 30, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {31, 31, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {32, 32, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {33, 33, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {34, 34, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {35, 35, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {36, 36, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {37, 37, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {38, 38, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {39, 39, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {40, 40, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {41, 41, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {42, 42, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {43, 43, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {44, 44, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {45, 45, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {46, 46, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {47, 47, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {48, 48, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {49, 49, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {50, 50, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {51, 51, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {52, 52, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {53, 53, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {54, 54, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {55, 55, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {56, 56, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {57, 57, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {58, 58, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
    {59, 59, 0, 0,  NEO_PIXEL_LAMP_UPDATE_LATENCY, 2, 255, 255, 255, 255,  LAMP_IS_PROGRAMMABLE, 0},
};

static const LampArrayAttributesReport s_lampArrayAttributesReport  = {
    // All lengths in micrometers.
    // All times in microseconds.
    //Count     Width        Height Depth KIND  			MinUpdateInternal
    LAMP_COUNT, LAMP_COUNT,  1,     1,    LampArrayKindArt, 33000
};
